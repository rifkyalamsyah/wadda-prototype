---
import Head from '@layouts/HeadSweetBrown.astro';

import '@styles/global.css';

const { title, desc, image, domain, url } = Astro.props;
---

<html lang='en'>
  <Head title={title} desc={desc} image={image} domain={domain} url={url} />
  <body>
    <slot />
    <!-- Bootstrap js -->
    <script
      src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js'
      integrity='sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz'
      crossorigin='anonymous'
      is:inline></script>
    <!-- pooper js -->
    <script
      src='https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js'
      integrity='sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r'
      crossorigin='anonymous'
      is:inline></script>
    <script
      src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js'
      integrity='sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy'
      crossorigin='anonymous'
      is:inline></script>
    <!-- tooltip botstrap -->
    <script is:inline>
      const tooltipTriggerList = document.querySelectorAll(
        '[data-bs-toggle="tooltip"]'
      );
      const tooltipList = [...tooltipTriggerList].map(
        (tooltipTriggerEl) => new bootstrap.Tooltip(tooltipTriggerEl)
      );
    </script>
    <!-- swal-->
    <script src='https://unpkg.com/sweetalert/dist/sweetalert.min.js' is:inline
    ></script>
    <!-- glightbox -->
    <script
      src='https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js'
      is:inline></script>
    <script type='text/javascript' is:inline>
      const lightbox = GLightbox({
        touchNavigation: true,
        loop: true,
        autoplayVideos: true,
      });
    </script>
    <!-- add to calendar -->
    <script
      src='https://cdn.jsdelivr.net/npm/add-to-calendar-button@2'
      async
      defer
      is:inline></script>
    <!-- hide scrol down -->
    <script is:inline>
      var lastScrollTop = 0;
      navbar = document.getElementById('navbar');
      window.addEventListener('scroll', function () {
        var scrollTop =
          window.pageXOffset || document.documentElement.scrollTop;
        if (scrollTop > lastScrollTop) {
          navbar.style.top = '-100px';
        } else {
          navbar.style.top = '0';
        }
        lastScrollTop = scrollTop;
      });
    </script>
    <script is:inline>
      // copy to clipboard
      function copyToClipboard(elementId, successMessage) {
        // copy text
        var textToCopy = document.getElementById(elementId).innerText;
        // creat temp
        var tempTextArea = document.createElement('textarea');
        tempTextArea.value = textToCopy;
        // hide element
        tempTextArea.style.position = 'absolute';
        tempTextArea.style.left = '-9999px';
        // add element
        document.body.appendChild(tempTextArea);
        // select text on element
        tempTextArea.select();
        // copy to clipboard
        document.execCommand('copy');
        // remove temp
        document.body.removeChild(tempTextArea);
        // show alert
        swal({
          title: 'Copied!',
          text: successMessage,
          icon: 'success',
          button: false,
          timer: 2000,
        });
      }

      // copy number
      const btnCopyRekening = document.querySelectorAll(
        'button.btn-copy-number'
      );
      btnCopyRekening.forEach((btn) => {
        btn.addEventListener('click', () => {
          // copyRekening();
          copyToClipboard('nomorRekening', 'Nomor rekening berhasil dicopy!');
        });
      });
      // copy address
      const btnCopyAddress = document.querySelectorAll(
        'button.btn-copy-address'
      );
      btnCopyAddress.forEach((btn) => {
        btn.addEventListener('click', () => {
          // copyAddress();
          copyToClipboard('address', 'Alamat berhasil dicopy!');
        });
      });
    </script>
    <script is:inline>
      // fix bug offcanvas
      const stickyTop = document.querySelector('.sticky-top');
      const offcanvas = document.querySelector('.offcanvas');

      offcanvas.addEventListener('show.bs.offcanvas', function () {
        stickyTop.style.overflow = 'visible';
      });

      offcanvas.addEventListener('hidden.bs.offcanvas', function () {
        stickyTop.style.overflow = 'hidden';
      });
      //end fix bug offcanvas
    </script>
    <script is:inline>
      //  Disable scroll cover
      const rootElement = document.querySelector(':root');
      // audio
      const audioIconWrapper = document.querySelector('.audio-icon-wrapper');
      const audioIcon = document.querySelector('.audio-icon-wrapper i');
      const song = document.querySelector('#song');
      let isPlaying = false;
      // end audio

      // disable scroll
      function disableScroll() {
        scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;

        window.onscroll = function () {
          window.scrollTo(scrollTop, scrollLeft);
        };
        rootElement.style.scrollBehavior = 'auto';
      }

      // icon audio
      audioIconWrapper.onclick = function () {
        if (isPlaying) {
          song.pause();
          // change icon pause
          audioIcon.classList.remove('bi-disc');
          audioIcon.classList.add('bi-pause-circle');
        } else {
          song.play();
          // change icon playing
          audioIcon.classList.add('bi-disc');
          audioIcon.classList.remove('bi-pause-circle');
        }

        isPlaying = !isPlaying;
      };
      // end audio

      disableScroll();
      //  End Disable scroll cover

      // change button & auto scroll
      function changeButton() {
        var btn = document.getElementById('btn-cover');
        btn.innerHTML =
          "Scroll ke bawah! <br> <i class='bi bi-mouse fs-1'></i>";
        btn.style.backgroundColor = 'transparent';
        btn.style.color = 'var(--grey-100)';
        btn.style.boxShadow = 'none';
        btn.style.position = 'absolute';
        btn.style.bottom = '12px';
        btn.style.left = '50%';
        btn.style.transform = 'translateX(-50%)';
        btn.className = 'btn btn-lg btn-primary';

        // Animasi scroll
        setTimeout(function () {
          var heroSection = document.getElementById('hero');
          heroSection.scrollIntoView({ behavior: 'smooth' });
        }, 1500);
      }

      // fullscreen mode
      var elem = document.documentElement;
      /* View in fullscreen */
      function openFullscreen() {
        if (elem.requestFullscreen) {
          elem.requestFullscreen();
        } else if (elem.webkitRequestFullscreen) {
          /* Safari */
          elem.webkitRequestFullscreen();
        } else if (elem.msRequestFullscreen) {
          /* IE11 */
          elem.msRequestFullscreen();
        }
      }
      // end fullscreen mode

      // audio
      function playAudio() {
        song.volume = 0.5;
        audioIconWrapper.style.display = 'flex';
        song.play();
        isPlaying = true;
      }

      // enable scroll
      function enableScroll() {
        window.onscroll = function () {};
        rootElement.style.scrollBehavior = 'smooth';

        // run fullscreen mode
        openFullscreen();

        // play audio
        playAudio();
      }

      const btnCover = document.querySelectorAll('#btn-cover');

      btnCover.forEach((btn) => {
        btn.addEventListener('click', () => {
          changeButton();
          enableScroll();
        });
      });
    </script>
  </body>
</html>
